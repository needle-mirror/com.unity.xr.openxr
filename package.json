{
  "name": "com.unity.xr.openxr",
  "displayName": "OpenXR Plugin",
  "version": "1.16.0-pre.2",
  "unity": "2022.3",
  "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
  "keywords": [
    "openxr",
    "xr",
    "reality",
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.management": "4.4.0",
    "com.unity.xr.legacyinputhelpers": "2.1.2",
    "com.unity.inputsystem": "1.6.3",
    "com.unity.xr.core-utils": "2.3.0"
  },
  "samples": [
    {
      "displayName": "Controller",
      "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
      "path": "Samples~/Controller"
    },
    {
      "displayName": "Controller XRInput",
      "description": "Basic sample showing how to query OpenXR input with the XR Input APIs.",
      "path": "Samples~/ControllerXRInput"
    },
    {
      "displayName": "Meshing Subsystem Feature",
      "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
      "path": "Samples~/MeshingFeature"
    },
    {
      "displayName": "Intercept Feature",
      "description": "Demonstrates how to intercept an OpenXR method.",
      "path": "Samples~/InterceptFeature"
    },
    {
      "displayName": "Custom Composition Layer Feature",
      "description": "Demonstrates how to add support for a custom composition layer type.",
      "path": "Samples~/CustomCompositionLayerFeature"
    }
  ],
  "_upm": {
    "changelog": "### Added\n\n* Added the following members to the [OpenXR native API](xref:openxr-native-api):\n  * `ISpatialConfiguration`\n  * `XrBaseInStructure`\n  * `OpenXRResultStatus.ToString`\n  * `XrFovf` (removing the previous `COMPOSITION_LAYERS` preprocessor directive)\n  * Added constructor overloads to structs that take `NativeArray<T>.ReadOnly` as input parameters.\n  * `XrSpatialDiscoverySnapshotCreateInfoEXT.defaultValue`\n  * `OpenXRNativeApi.xrPollFutureEXT(XrFutureEXT)`\n  * `OpenXRNativeApi.xrCancelFutureEXT(XrFutureEXT)`\n  * `OpenXRResultStatus.StatusCode.Unsupported`\n  * static factory methods to construct `XrPosef`, `XrVector3f`, and `XrQuaternionf` from session-space data\n  * `XrVector3f.ToSessionSpaceVector3`\n  * `XrQuaternionf.ToSessionSpaceQuaternion`\n  * `XrPosef.ToSessionSpacePose`\n  * `XrPosef(UnityEngine.Pose)` constructor\n  * `XrSpatialComponentDataQueryResultEXT(void*)` constructor\n  * `XrSpatialComponentDataQueryResult.SetEntityIds` and `XrSpatialComponentDataQueryResult.SetEntityStates`\n* Added a new validation rule for Meta Quest feature to ensure Application entry point being set to GameActivity for Unity 6.0+.\n\n### Deprecated\n\n* Deprecated Hololens Microsoft Hand Interaction Profile.\n\n### Removed\n\n* Removed a pre-release overload for `OpenXRNativeAPI.xrQuerySpatialComponentDataEXT` that didn't allow you to receive component data chained to the next pointer of the query condition.\n\n### Fixed\n\n* Fixed the Render Mode setting dropdown in OpenXR Settings to align consistently with the UI of other settings.\n* Fixed `MockOpenXREnvironmentSettings` so that changes made to mock runtime settings don't affect the serialized settings assets in your project.\n* Fixed `MockOpenXREnvironmentSettings` so that it doesn't save any unwanted changes to your EditorBuildSettings.\n* Fixed swapchain diagnostic reports not being removed from cache after swapchains are destroyed.\n* Fixed a compile error when using this package in Unity 6000.3.0b1 or newer, which was caused by the deprecation of the VR module in that Editor version.\n* Fixed a crash when the OpenXR library was loaded with a path containing emojis on OSX."
  },
  "upmCi": {
    "footprint": "763a7cebf117dad12c839d4cbb1371b6f60691d3"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.16/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
    "type": "git",
    "revision": "7dce02b07790c6edd5864275a833b1f9164b2665"
  }
}
