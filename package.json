{
  "name": "com.unity.xr.openxr",
  "displayName": "OpenXR Plugin",
  "version": "1.16.0",
  "unity": "2022.3",
  "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
  "keywords": [
    "openxr",
    "xr",
    "reality",
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.management": "4.4.0",
    "com.unity.xr.legacyinputhelpers": "2.1.2",
    "com.unity.inputsystem": "1.6.3",
    "com.unity.xr.core-utils": "2.3.0"
  },
  "samples": [
    {
      "displayName": "Controller",
      "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
      "path": "Samples~/Controller"
    },
    {
      "displayName": "Controller XRInput",
      "description": "Basic sample showing how to query OpenXR input with the XR Input APIs.",
      "path": "Samples~/ControllerXRInput"
    },
    {
      "displayName": "Meshing Subsystem Feature",
      "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
      "path": "Samples~/MeshingFeature"
    },
    {
      "displayName": "Intercept Feature",
      "description": "Demonstrates how to intercept an OpenXR method.",
      "path": "Samples~/InterceptFeature"
    },
    {
      "displayName": "Custom Composition Layer Feature",
      "description": "Demonstrates how to add support for a custom composition layer type.",
      "path": "Samples~/CustomCompositionLayerFeature"
    }
  ],
  "_upm": {
    "changelog": "### Added\n\n * Added public debug symbols for the UnityOpenXR library for Android platform that are available when building an APK with the Debug Symbols dropdown set to Public or Debugging. For more information, refer to [Android Symbols](https://docs.unity3d.com/6000.3/Documentation/Manual/android-symbols.html).\n * Added validation rule for Multi View Per View Viewport and Render Graph.\n\n### Changed\n\n* Changed the return values of the following pre-release APIs from `XrResult` to `OpenXRResultStatus`:\n  * `OpenXRNativeAPI.xrEnumerateSpatialPersistenceScopesEXT(uint, out uint, XrSpatialPersistenceScopeEXT*)`\n  * `OpenXRNativeAPI.xrEnumerateSpatialPersistenceScopesEXT(Allocator, out NativeArray<XrSpatialPersistenceScopeEXT>`\n* Changed the OpenXR test \"DuplicateSettingAssetTest\" to be ignored.\n\n### Fixed\n\n* Fixed a crash with `OpenXRProjectionLayer` when a texture with a size larger than the view was used.\n* Fixed a crash when the calls are sent to OpenXR library display subsystem before the OpenXR library is initialized manually.\n* Fixed an issue where the user's OpenXR settings could be erased after creating a build.\n* Fixed missing diagnostic logs for the available and requested OpenXR extensions under the OpenXR Runtime Info section.\n* Fixed one frame flash of black screen when recentering view in floor space.\n* Fixed OpenXR Project Settings so that changes to enabled interaction profiles are correctly saved when you close and re-open the Editor. ([OXRB-662](https://issuetracker.unity3d.com/product/unity/issues/guid/OXRB-662))"
  },
  "upmCi": {
    "footprint": "529a1540d94190e29162c14a211aae57d69bb6f9"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.16/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
    "type": "git",
    "revision": "0dae6e8d539dfbe20df54c71881ce2dbf25aba3e"
  }
}
