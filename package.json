{
  "name": "com.unity.xr.openxr",
  "displayName": "OpenXR Plugin",
  "version": "1.15.0",
  "unity": "2021.3",
  "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
  "keywords": [
    "openxr",
    "xr",
    "reality",
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.management": "4.4.0",
    "com.unity.xr.legacyinputhelpers": "2.1.2",
    "com.unity.inputsystem": "1.6.3",
    "com.unity.xr.core-utils": "2.3.0"
  },
  "samples": [
    {
      "displayName": "Controller",
      "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
      "path": "Samples~/Controller"
    },
    {
      "displayName": "Controller XRInput",
      "description": "Basic sample showing how to query OpenXR input with the XR Input APIs.",
      "path": "Samples~/ControllerXRInput"
    },
    {
      "displayName": "Meshing Subsystem Feature",
      "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
      "path": "Samples~/MeshingFeature"
    },
    {
      "displayName": "Intercept Feature",
      "description": "Demonstrates how to intercept an OpenXR method.",
      "path": "Samples~/InterceptFeature"
    },
    {
      "displayName": "Custom Composition Layer Feature",
      "description": "Demonstrates how to add support for a custom composition layer type.",
      "path": "Samples~/CustomCompositionLayerFeature"
    }
  ],
  "_upm": {
    "changelog": "### Added\n\n* Added settings and a component to enable URP Application Spacewarp for compatible devices. Refer to [URP Application Spacewarp](xref: openxr-spacewarp) for information.\n* Added a validation rule for warning of Magic Leap 2 limit to existing projects from Unity 6.3.\n\n### Changed\n\n* Check whether the requested eye tracking permission has been granted before requesting permission.\n* Changed the Composition Layers native implementation to create global references of Android surface objects.\n\n### Fixed\n\n* Fixed compile errors due to `TreeView`, `TreeViewState` and `TreeViewItem` were deprecated in Unity 6.2 and newer.\n* Fixed an issue to only apply OpenXR related bootconfig when OpenXR Loader is enabled.\n* Enabled `XR_FB_swapchain_update_state` extension by default if available to fix `XR_ERROR_EXTENSION_DEPENDENCY_NOT_ENABLED` runtime error when `XR_FB_foveation` extension was enabled by default.\n* Fixed incorrect display of the `Use OpenXR Predicted Time` toggle in Unity versions below 6.2.\n* Fixed a crash that could occur when changing scenes containing an `OpenXRDefaultLayer` with extensions.\n* Fixed compile errors due to `EditorUtility.InstanceIDToObject` being deprecated in Unity 6.3 and newer.\n* Fixed foveation data corruption leading to visual anomalies when the OpenXR swapchain was frequently resized.\n* Fixed an increase in memory that was seen in older editors that are not checking for the OffScreen Rendering Only bootconfig value."
  },
  "upmCi": {
    "footprint": "be3748847f9ad8e9d6da770fa5d16c9819ae2ab2"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.15/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
    "type": "git",
    "revision": "072d1dab8151cf1db10aed5b6870967a19673c23"
  }
}
